{"version":3,"sources":["logo.svg","components/Navbar.jsx","components/Result.jsx","components/Loading.jsx","App.js","reportWebVitals.js","store.js","index.js"],"names":["Navbar","term","useStoreState","state","searchTerm","setTerm","useStoreActions","actions","fetchArtists","className","src","logo","alt","type","value","placeholder","onKeyDown","e","key","onChange","target","Result","isFetched","results","map","result","artworkUrl100","trackName","href","artistViewUrl","artistName","controls","previewUrl","trackId","Loading","App","useState","isLoading","setIsLoading","setTimeout","useEffect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","api","create","baseURL","store","createStore","action","payload","thunk","a","console","log","any","method","url","params","media","limit","data","populateResults","catch","err","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb1462e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.90980c11.svg\";","import { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport React, { useState } from 'react'\r\nimport logo from '../logo.svg'\r\nexport default function Navbar() {\r\n    const term = useStoreState(state => state.searchTerm);\r\n    const setTerm = useStoreActions(actions => actions.setTerm);\r\n    const fetchArtists = useStoreActions(actions => actions.fetchArtists);\r\n    const handleEnter = (e) => {\r\n        if (e.key === 'Enter') {\r\n            fetchArtists(term)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"\"/>\r\n            </div>\r\n            <div className=\"right\">\r\n                <div className=\"search\">\r\n                    <input type=\"search\" value={term} placeholder=\"Search\" onKeyDown={handleEnter} onChange={e => setTerm(e.target.value) }  />\r\n                    <span className=\"fas fa-search\"></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useStoreState } from 'easy-peasy'\r\nimport React from 'react'\r\n\r\nexport default function Result() {\r\n    const term = useStoreState(state => state.searchTerm);\r\n    const isFetched = useStoreState(state => state.isFetched);\r\n    const results = useStoreState(state => state.results);\r\n    return (\r\n        <div className=\"result-container\">\r\n            <h2>Popular Search {term}</h2>\r\n            {isFetched ? (\r\n                <div className=\"results\">\r\n                    {results.map(result => (\r\n                            <div className=\"card\" key={result.trackId}>\r\n                                <div className=\"card-header\">\r\n                                    <div className=\"card-img\">\r\n                                        <img src={result.artworkUrl100} alt=\"\"/>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"song-name\">{result.trackName}</p>\r\n                                        <a target=\"_blank\" href={result.artistViewUrl} className=\"artist-name\">{result.artistName}</a>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"player\">\r\n                                    <audio controls>\r\n                                        <source src={result.previewUrl}/>\r\n                                    </audio>\r\n                                </div>\r\n                            </div>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"error\">Something went wrong. Please try Again later</div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"loading-container\">\r\n            <p>Loading</p>\r\n            <div className=\"loading\">\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Result from './components/Result';\nimport logo from './logo.svg';\nimport {useStoreActions} from 'easy-peasy'\nimport Loading from './components/Loading';\n\nfunction App() {\n  const fetchArtists = useStoreActions(actions => actions.fetchArtists);\n  const [isLoading, setIsLoading] = useState(false)\n  setTimeout(() => {\n    setIsLoading(true)\n  }, 3000)\n  useEffect(() => {\n      const payload = \"Don't rush\"\n      fetchArtists(payload)\n  }, [])\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <Navbar/>\n        {!isLoading && <Loading/>}\n        {isLoading && <Result/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, action, thunk} from 'easy-peasy';\r\nimport {create} from 'apisauce'\r\n\r\nconst api = create({\r\n    baseURL: 'https://cors-anywhere.herokuapp.com/https://itunes.apple.com'                                                                                                                                                  \r\n})\r\n\r\nconst store = createStore({\r\n    searchTerm: \"\",\r\n    results: [],\r\n    isFetched: false,\r\n    setTerm : action((state, payload) => {\r\n        state.searchTerm = payload\r\n    }),\r\n    fetchArtists: thunk(async (actions, payload) => {\r\n        // const url = new URL(payload.url);\r\n        // const params = {term: payload.term, media: \"music\"};\r\n        // url.search = new URLSearchParams(params)            \r\n        console.log(payload);\r\n        api.any({ method: 'GET',url: '/search', params: { term: payload, media: \"music\", limit: 10}})\r\n        .then(data => actions.populateResults(data.data.results))\r\n        .catch(err => actions.populateResults([])); \r\n        // fetch(\"https://cors-anywhere.herokuapp.com/\"+url)\r\n        // .then(async res => {\r\n        //     const data = await res.json()\r\n            // actions.populateResults(data);\r\n        // })\r\n      }),\r\n      populateResults: action((state, payload) => {\r\n          state.results = payload\r\n          if(payload.length > 0){\r\n            state.isFetched = true     \r\n          }\r\n      }),\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store'\nimport {StoreProvider} from 'easy-peasy'\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}